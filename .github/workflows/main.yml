name: Main workflow

on:
  push:
    branches:
      - main

jobs:
  # тест проекта
  tests:
    # Разворачиваем окружение:
    runs-on: ubuntu-latest

    steps:
    # Копируем код проекта:
    - name: Check out code
      uses: actions/checkout@v3
    # Устанавливаем Python с помощью action:
    - name: Set up Python
      uses: actions/setup-python@v4
    # В action setup-python@v4 передаём параметр — версию Python:
      with:
        python-version: 3.9
    # Обновляем pip, устанавливаем flake8 и flake8-isort, 
    # устанавливаем зависимости проекта:
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8==6.0.0 flake8-isort==6.0.0
    # Запускаем flake8:
    - name: Test with flake8
      # Вызываем flake8 и указываем ему,
      # что нужно проверить файлы только в папке backend/
      run: python -m flake8 backend/
  
  # Сборка образа и загрузка в Docker Hub
  build->push:
    # Разворачиваем окружение:
    runs-on: ubuntu-latest

    steps:
    # Логинимся в Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_LOGIN }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Билдим и пушим backend
    - name: build-push backend image
      run: |
        docker build -t ${{ secrets.DOCKER_LOGIN }}/kittygram_backend:latest backend
        docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_backend:latest

    # Билдим и пушим frontend
    - name: build-push frontend image
      run: |
        docker build -t ${{ secrets.DOCKER_LOGIN }}/kittygram_frontend:latest frontend
        docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_frontend:latest

    # Билдим и пушим gateway
    - name: build-push gateway image
      run: |
        docker build -t ${{ secrets.DOCKER_LOGIN }}/kittygram_gateway:latest nginx
        docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_gateway:latest