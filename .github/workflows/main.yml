name: Main workflow

on:
  push:
    branches:
      - main

jobs:
  # тест проекта
  tests:
    # Разворачиваем окружение:
    runs-on: ubuntu-latest

    steps:
    # Копируем код проекта:
    - name: Check out code
      uses: actions/checkout@v3
    # Устанавливаем Python с помощью action:
    - name: Set up Python
      uses: actions/setup-python@v4
    # В action setup-python@v4 передаём параметр — версию Python:
      with:
        python-version: 3.9
    # Обновляем pip, устанавливаем flake8 и flake8-isort, 
    # устанавливаем зависимости проекта:
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8==6.0.0 flake8-isort==6.0.0
    # Запускаем flake8:
    - name: Test with flake8
      # Вызываем flake8 и указываем ему,
      # что нужно проверить файлы только в папке backend/
      run: python -m flake8 backend/
  
  # Сборка образа и загрузка в Docker Hub
  build-push:
    needs: tests
    # Разворачиваем окружение:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        # Получение исходного кода из репозитория:
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        # Установка сборщика контейнеров Docker:
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        # Авторизация на Docker Hub:
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push backend to DockerHub
        # Одновременный билд и пуш образа в Docker Hub:
        uses: docker/build-push-action@v4
        with:
          # Dockerfile находится в ./backend/
          context: ./backend/
          # образ нужно собрать и отправить на Docker Hub:
          push: true
          # указываем название и tag образа
          tags: ${{ secrets.DOCKER_LOGIN }}/kittygram_backend:latest

      - name: Push frontend to DockerHub
        # Одновременный билд и пуш образа в Docker Hub:
        uses: docker/build-push-action@v4
        with:
          # Dockerfile находится в ./frontend/
          context: ./frontend/
          # образ нужно собрать и отправить на Docker Hub:
          push: true
          # указываем название и tag образа
          tags: ${{ secrets.DOCKER_LOGIN }}/kittygram_frontend:latest

      - name: Push gateway to DockerHub
        # Одновременный билд и пуш образа в Docker Hub:
        uses: docker/build-push-action@v4
        with:
          # Dockerfile находится в ./nginx/
          context: ./nginx/
          # образ нужно собрать и отправить на Docker Hub:
          push: true
          # указываем название и tag образа
          tags: ${{ secrets.DOCKER_LOGIN }}/kittygram_gateway:latest

  deploy:
    needs:
      - tests
      - build-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
      # Получение исходного кода из репозитория:
        uses: actions/checkout@v3

      - name: Deploy application
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_LOGIN }}
          passphrase: ${{ secrets.SERVER_PASSPHRASE }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e

            echo "Переходим в папку проекта"
            cd ./kittygram

            echo "Запускакм файл docker-compose"
            sudo docker-compose -f docker-compose.yml pull  